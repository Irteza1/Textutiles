{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","about","onClick","toggleMode","Htmlfor","defaultProps","TextForm","useState","text","setText","style","color","rows","value","onChange","event","target","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","newtext","replace","trim","document","getElementById","select","navigator","clipboard","writeText","length","split","Alert","alert","role","word","lower","charAt","slice","capitalize","message","App","setmode","setalert","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.86a8bff4.chunk.js","sourcesContent":["\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nexport default function Navbar(props) {\r\n  \r\n    return (\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} px-5 `}>\r\n  {/*<Link className=\"navbar-brand \" to=\"/\"  >{props.title}</Link>*/}\r\n  <a className=\"navbar-brand \" href=\"\"  >{props.title}</a>\r\n\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul className=\"navbar-nav mr-auto\">\r\n      <li className=\"nav-item active\">\r\n  {/*      <Link className=\"nav-link\" to=\"/\">Home<span className=\"sr-only\"></span></Link>*/}\r\n        <a className=\"nav-link\" href=\"\">Home<span className=\"sr-only\"></span></a>\r\n\r\n      </li>\r\n      <li className=\"nav-item\">\r\n  {/*      <Link className=\"nav-link\" to=\"/About\" >{props.about}</Link>*/}\r\n        <a className=\"nav-link\" href=\"\" >{props.about}</a>\r\n\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div className={`form-check form-switch text-${props.mode==='dark'?\"light\":\"dark\"}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\r\n  <label className=\"form-check-label\" Htmlfor=\"flexSwitchCheckDefault\" >{props.mode==='dark'?\"Enable lightMode\":\"Enable DarkMode\"}</label>\r\n</div>\r\n<div className={`form-check form-switch text-${props.mode==='dark'?\"light\":\"dark\"}`}>\r\n  <input className=\"form-check-input mx-1\" type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label \" Htmlfor=\"flexSwitchCheckDefault\">Enable RedMode</label>\r\n</div>\r\n</nav>\r\n    \r\n    )\r\n}\r\nNavbar.propTypes={\r\ntitle: PropTypes.string.isRequired,\r\nabout: PropTypes.string.isRequired\r\n\r\n}\r\nNavbar.defaultProps={\r\n  title: \"enter name here\",\r\n  about: \"about us\"\r\n}","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    \r\n\r\nconst Uppercase=()=>\r\n{\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\" Converted To UpperCase\",\"success\");\r\n}\r\nconst handler=(event)=>\r\n{\r\n    setText(event.target.value);\r\n}\r\nconst lowercase=()=>\r\n{\r\n    let newText=text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\" Converted To LowerCase\",\"success\");\r\n\r\n}\r\nconst clear=()=>\r\n{\r\n    let newtext='';\r\n    setText(newtext);\r\n    props.showAlert(\" Text is cleared\",\"success\");\r\n\r\n}\r\nconst Extraspace=()=>{\r\n    let newtext=text.replace(/\\s+/g, ' ').trim();\r\n    setText(newtext);\r\n    props.showAlert(\" Extra Spaces Are Removed\",\"success\");\r\n\r\n}\r\nconst Copy=()=>{\r\n   \r\n    var text=document.getElementById(\"myBox\")\r\n    if(text!=='')\r\n    {\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n   }\r\n   props.showAlert(\" Text is copied\",\"success\");\r\n   \r\n   \r\n}\r\n\r\nconst [text,setText]=useState(\"\");\r\n    return (  \r\n         \r\n<>\r\n       <div className=\"container my-3\"  style={{color:props.mode==='dark'?'white':\"#31383f\"}}>\r\n           <h3>Enter text Here</h3>\r\n  <div className=\"mb-3\">\r\n    \r\n    <textarea className=\"form-control\" id=\"myBox\" rows=\"6\" value={text} onChange={handler} style={{backgroundColor:props.mode==='dark'?\"#31383f\":'white'}}></textarea>\r\n    </div>  \r\n    <button className=\"btn btn-primary mx-1 mb-2\" onClick={Uppercase}>UpperCase</button>\r\n    <button className=\"btn btn-primary mx-1 mb-2\" onClick={lowercase}>LowerCase</button>\r\n    <button className=\"btn btn-primary mx-1 mb-2\" onClick={clear}>clear</button>\r\n    <button className=\"btn btn-primary mx-1 mb-1\" onClick={Extraspace}>Remove Extra Space</button>\r\n    <button className=\"btn btn-primary mx-1 mb-1\" onClick={Copy} >Copy</button>\r\n\r\n\r\n  \r\n  </div>\r\n  <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':\"#31383f\"}}>\r\n      <h4>Your Text Summary</h4>\r\n        <p >Your text lenght is {text===''?\"0\":text.length}</p>\r\n        <p>Your Text words is {text===''?\"0\":text.split(\" \").length}</p>   \r\n        <p>Time to read is {text===''?\"0\":0.008*text.split(\" \").length} mintues</p>\r\n        <p>No of sentences {text.split(\".\").length-1}</p>\r\n        \r\n        <h4>Preview</h4>\r\n      <p>{text===''? \"Enter Something In Box To Preview Here \" :text}</p>\r\n  </div>\r\n  \r\n  </>  \r\n    )\r\n}\r\nTextForm.defaultProps={\r\n    text : \"Enter Heading here\"\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n      }\r\n    return (\r\n      props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong> {capitalize(props.alert.type) }</strong>:{props.alert.message}\r\n  </div>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport Navbar from '../src/components/Navbar';\r\nimport './App.css';\r\nimport TextForm from './components/TextForm';\r\nimport About from './components/About';\r\n\r\nimport Alert from './components/Alert';\r\n/*\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n*/\r\n\r\nfunction App() {\r\n  const [mode, setmode] = useState('light');\r\n\r\n  const [alert, setalert] = useState(null);\r\n  const showAlert=(message,type)=>{\r\n     setalert({\r\n        message:message,\r\n        type:type\r\n              })\r\n  }\r\n /* const toggleRed=()=>\r\n  {\r\n    if(mode==='#ff0000')\r\n    {\r\n      setmode('light');\r\n      document.body.style.backgroundColor='white';\r\n      showAlert(\" Light Mode Is Enabled\",\"success\");\r\n\r\n    }\r\n    else\r\n    {\r\n      setmode('ff0000');\r\n      document.body.style.backgroundColor='pink';\r\n      showAlert(\"  RedMode Is Enabled\",\"success\");\r\n\r\n    }\r\n  }\r\n  */\r\n  const toggleMode=()=>{\r\n    if(mode==='dark')\r\n    {\r\n      setmode('light');\r\n      document.body.style.backgroundColor='white';\r\n      showAlert(\" Light Mode Is Enabled\",\"success\");\r\n      \r\n\r\n    }\r\n    else\r\n    {\r\n      setmode('dark');\r\n      document.body.style.backgroundColor='#31383f';\r\n      showAlert(\" Dark Mode Is Enabled\",\"success\");\r\n\r\n    }\r\n  }\r\n  setTimeout(() => {\r\n    setalert(null);\r\n  }, 2500);\r\n\r\n  \r\n  return (\r\n    /*\r\n    <>\r\n    <Router>\r\n    <Navbar title=\"Text Editor\" about=\"About Us\" mode={mode} toggleMode={toggleMode} />\r\n    <Alert alert={alert}/>          \r\n    \r\n     \r\n    <Switch>\r\n          <Route exact path=\"/About\">\r\n            <About />\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n          <div className=\"container my-8\">\r\n      <TextForm showAlert={showAlert} text=\"Enter Text To Analyze\" mode={mode} />\r\n    </div>\r\n          </Route>\r\n        </Switch>\r\n        </Router>\r\n        \r\n    </>\r\n    */\r\n\r\n    <>\r\n\r\n    <Navbar title=\"Text Editor\" about=\"About Us\" mode={mode} toggleMode={toggleMode} />\r\n    <Alert alert={alert}/>          \r\n    \r\n     \r\n    \r\n          \r\n          <div className=\"container my-8\">\r\n      <TextForm showAlert={showAlert} text=\"Enter Text To Analyze\" mode={mode} />\r\n    </div>\r\n    </>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}